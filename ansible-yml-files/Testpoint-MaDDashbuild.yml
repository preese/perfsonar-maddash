---

- hosts: all
  become: yes
  tasks:
    - name: Install EPEL and perfSONAR repo
      ansible.builtin.yum:
        name: 
          - "{{ item }}"
        state: present
      loop:    
        - epel-release
        - http://software.internet2.edu/rpms/el7/x86_64/latest/packages/perfSONAR-repo-0.10-1.noarch.rpm
    - name: yum-clean-metadata
      command: yum clean metadata
      args
        warn: no


- hosts: ps
  gather_facts: False
  become: yes
  tasks:
    - name: For ps VMs, add testpoint.rpm and other rpmss
      ansible.builtin.yum:
        name: 
          - "{{ item }}"
        state: present
      loop: 
        - perfsonar-testpoint
        - perfsonar-toolkit-ntp
        - perfsonar-toolkit-security
        - perfsonar-toolkit-servicewatcher
        - perfsonar-toolkit-systemenv-testpoint

    - name: For ps VMs, install remote URL and archives, even before the .json is published, the testpoints will be ok
      command: 'psconfig remote  add --configure-archives "http://192.168.0.34/psconfig/mesh.json"'

    - name: For ps VMs, restart psconfig-pscheduler-agent
      ansible.builtin.systemd:
        name: psconfig-pscheduler-agent
        state: restarted

- hosts: mad
  gather_facts: False
  become: yes
  tasks:
    - name: For md, add perfsonar-centralmanagment, setup FW
      ansible.builtin.yum:
        name: 
          - perfsonar-centralmanagement
        state: present

    - name: Start Firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: restarted
        enabled: true

    - name: Start FW
      ansible.builtin.systemd:
        name: firewalld
        state: started

    - name: FirewallD rules
      ansible.posix.firewalld
        service: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      with_items:
       - http
       - https

    - name: Copy mesh.json file to Maddash node from Vagrant host
      copy:
        src: ./mesh.json
        dest: /home/vagrant/
        owner: vagrant
        group: vagrant
     
    - name: Publish mesh.json file 
      command:  "psconfig publish /home/vagrant/mesh.json"

    - name: Add access to esmond for local net
      command:  "/usr/sbin/esmond_manage add_user_ip_address example-user1 192.168.0.0/23"

    - name: Remote add file, lets the testpoints know where to find work
      command:  'psconfig remote add "http://192.168.0.34/psconfig/mesh.json"'

    - name: Add new project name for web site
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My perfSONAR Dashboard"'
        replace: '"Example Maddash setup, with disjoint option"'

    - name: Add correct grid name, so it opens first
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My Sites"'
        replace: '"1 PSproj"'

    - name: Enable cassandra
      ansible.builtin.systemd:
        name: cassandra
        enabled: yes

    - name: Start cassandra
      ansible.builtin.systemd:
        name: cassandra
        state: started

    - name: Restart maddash-server
      ansible.builtin.systemd:
        name: maddash-server
        state: restarted

    - name: Restart psconfig-maddash-agent
      ansible.builtin.systemd:
        name: psconfig-maddash-agent
        state: restarted

    - name: Restart httpd
      ansible.builtin.systemd:
        name: httpd
        state: restarted

    - name: Shorten test times, packet loss, every 5min
      command:  "psconfig maddash-grid edit --name default_loss --check-interval PT5M"

    - name: Shorten test time, throughput, every 2hr
      command: "psconfig maddash-grid edit --name default_throughput --check-interval PT2H"
